#!/usr/bin/env bash
# Generate SHA256 of a git ref, defaulting to current git HEAD.
#
# See README caveats of GitHub's tarball mismatch with output SHA256.

GITHUB_USER=${GITHUB_USER:-rduplain}

dirty() {
    # Check if git repository is dirty, return zero if dirty.
    #
    # Here, dirty means one or both of:
    #
    # * the git index is not empty (compared to HEAD)
    # * the working tree has changes (compared to HEAD)

    if git diff-index --quiet --cached HEAD && git diff-files --quiet; then
        return 1
    fi

    return 0

}

if [ $# -gt 0 ]; then
    target_ref=$1
else
    target_ref=HEAD
fi

if [ "$target_ref" = "HEAD" ] && dirty; then
    echo 'warning: git repository is dirty.'                             >&2
    echo                                                                 >&2
    echo '`git archive` will not include any changes not yet committed.' >&2
    echo                                                                 >&2
    echo                                                                 >&2
fi

ref=$(git rev-parse --short $target_ref)

# Again... See README caveats of GitHub's tarball mismatch with output SHA256.
echo    "ref:    $ref"
echo -n "sha256: "
git archive \
    --prefix=${GITHUB_USER}-Makefile.d-"$ref"/ \
    --format=tar.gz -6 $target_ref |\
        openssl dgst -sha256 |\
            awk '{ print $2 }'
