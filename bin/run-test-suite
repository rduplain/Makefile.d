#!/usr/bin/env bash
# Run test suite, first resolving project-built binary for present platform.
#
# This is provided to projects using Makefile.d.
# See ../test/bin/test-suite for Makefile.d tests.

# Required environment variables:
#
# NAME                            # Name of the project, matching exe basename.

# Exported functions and values:
declare -f assert_equal
declare EXE                       # Path to project-built platform binary.

# Program variables:
declare PROG                      # Name of this test program.
declare TARGET                    # Path to project-built 'target' directory.
declare TEST_SUITE                # Path to test-suite program.

assert_equal() {
    # Assert strings are equal.

    local test expected actual

    if [ $# -eq 3 ]; then
        test=$1
        actual=$2
        expected=$3
    else
        actual=$1
        expected=$2
    fi

    if [ "$actual" != "$expected" ]; then
        if [ -n "$test" ]; then
            echo "test:     $test" >&2
        fi
        echo "expected: $expected" >&2
        echo "  actual: $actual"   >&2
        return 1
    fi
}

resolve_exe() {
    # Resolve path to project-built binary based on the present platform.

    if [ -e "$TARGET/$NAME" ]; then
        # Prefer single binary, if found, which is a build for current OS.
        EXE="$TARGET/$NAME"
    else
        case "$OSTYPE" in
            linux*)
                EXE="$TARGET/bin-linux/$NAME"
                ;;
            darwin*)
                EXE="$TARGET/bin-mac/$NAME"
                ;;
            *)
                echo "$PROG: unsupported OS: $OSTYPE" >&2
                return 2
                ;;
        esac
    fi

    echo "Testing binary: $EXE"
}

main() {
    # Run tests.

    # Exit immediately if a command error or non-zero return occurs.
    set -e

    # The name of this test program.
    PROG="$( basename "${BASH_SOURCE[0]}" )"

    if [ $# -ne 2 ]; then
        exec >&2 # Redirect all further stdout to stderr.

        echo "usage: $PROG TARGET_PATH TEST_SUITE"
        echo
        echo "TARGET_PATH         Path to project-built 'target' directory."
        echo "TEST_SUITE          Path to test-suite program."
        echo
        echo "Set environment:"
        echo
        echo "NAME                Name of the project, matching exe basename."
        echo
        echo "The test-suite program is given these environment variables:"
        echo
        echo "EXE                 Path to project-built platform binary."
        echo "assert_equal        A bash function to assert strings are equal."
        return 2
    fi

    TARGET="$1"
    TEST_SUITE="$2"
    shift 2

    # Test required environment variables.
    if [ -z "$NAME" ]; then
        echo "$PROG: set NAME with project name, matching exe basename." >&2
        return 2
    fi

    # Resolve EXE.
    resolve_exe

    # Export variables for use in subprocesses.
    export EXE
    export -f assert_equal

    # Run test suite.
    exec "$TEST_SUITE"
}

main "$@"
